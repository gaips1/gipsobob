import asyncio
import random
import discord
from db.database_instance import db
from ext import update_quest

class casinoView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="–°–ª–æ—Ç—ã", style=discord.ButtonStyle.success, emoji="üé∞")
    async def sloti(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(slotiModal())

    @discord.ui.button(label="–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", style=discord.ButtonStyle.blurple, emoji="ü§î")
    async def guess_game(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(guessModal())

class guessModal(discord.ui.Modal, title = "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"):
    def __init__(self):
        super().__init__(timeout=None)

    stavka = discord.ui.TextInput(label="–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞:", required=True, default="100")
    numbers = discord.ui.TextInput(label="–î–æ –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –±—É–¥–µ—Ç–µ —É–≥–∞–¥—ã–≤–∞—Ç—å?", required=True, default="10")
    number = discord.ui.TextInput(label="–í–∞—à–µ —á–∏—Å–ª–æ", required=True)

    async def on_submit(self, inter: discord.Interaction):
        try:
            stavka = int(self.stavka.value)
        except:
            return await inter.response.send_message("–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º!", ephemeral=True)
        
        if stavka < 100:
            return await inter.response.send_message("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 100 –±–µ–±—Ä", ephemeral=True)
        
        try:
            numbers = int(self.numbers.value)
        except:
            return await inter.response.send_message("–í–∞—à–µ —á–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º!", ephemeral=True)

        try:
            number = int(self.number.value)
        except:
            return await inter.response.send_message("–í–∞—à–µ —á–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º!", ephemeral=True)
        
        if number < 1 or number > numbers:
            return await inter.response.send_message("–í–∞—à–µ —á–∏—Å–ª–æ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω!", ephemeral=True)
        
        if number <= 0:
            return await inter.response.send_message("–í–∞—à–µ —á–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!", ephemeral=True)
        
        if numbers <= 0:
            return await inter.response.send_message("–ß–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!", ephemeral=True)

        me = await db.sbp.get_user(inter.user.id)

        from cogs.sbp import AUTHOR_UNATHORIZED_ERROR
        if not me: return await inter.response.send_message(content=AUTHOR_UNATHORIZED_ERROR, view=None, ephemeral=True)
        
        if me.balance < stavka:
            return await inter.response.send_message(content="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", view=None, ephemeral=True)

        await inter.response.send_message(embed=discord.Embed(title=f"–°–ø–∞—Å–∏–±–æ, —Å—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!", description="–Ø –≤—ã–¥—É–º—ã–≤–∞—é —á–∏—Å–ª–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...", color=discord.Color.random()), ephemeral=True)
        await me.decrease_balance(stavka)

        await asyncio.sleep(3)

        num = random.randint(1, numbers)
        win = round(stavka * numbers * 0.2)

        if num == number:
            await me.increase_balance(win)
            await inter.edit_original_response(embed=discord.Embed(title=f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!", description=f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {stavka} –±–µ–±—Ä\n–í—ã–∏–≥—Ä—ã—à: {win} –±–µ–±—Ä", color=discord.Color.random()))
        else:
            await inter.edit_original_response(embed=discord.Embed(title=f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", description=f"–Ø –≤—ã–¥—É–º–∞–ª —á–∏—Å–ª–æ {num}\n–í—ã –º–æ–≥–ª–∏ –±—ã –≤—ã–∏–≥—Ä–∞—Ç—å {win} –±–µ–±—Ä!", color=discord.Color.random()))
        
        await update_quest(inter.user, "casino", )

class slotiModal(discord.ui.Modal, title = "–°–ª–æ—Ç—ã"):
    def __init__(self):
        super().__init__(timeout=None)

    stavka = discord.ui.TextInput(label="–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞:", required=True)

    async def on_submit(self, inter: discord.Interaction):
        try:
            stavka = int(self.stavka.value)
        except:
            return await inter.response.send_message("–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º!", ephemeral=True)
        
        if stavka < 300:
            return await inter.response.send_message("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 300 –±–µ–±—Ä", ephemeral=True)
        
        me = await db.sbp.get_user(inter.user.id)

        from cogs.sbp import AUTHOR_UNATHORIZED_ERROR
        if not me: return await inter.response.send_message(content=AUTHOR_UNATHORIZED_ERROR, view=None, ephemeral=True)
        
        if me.balance < stavka:
            return await inter.response.send_message(content="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", view=None, ephemeral=True)

        await me.decrease_balance(stavka)

        await inter.response.send_message(embed=discord.Embed(title=f"–°–ø–∞—Å–∏–±–æ, —Å—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!", description="–ö—Ä—É—á—É –±–∞—Ä–∞–±–∞–Ω, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...", color=discord.Color.random()), ephemeral=True)
        await asyncio.sleep(3)
        
        emoges = {"7Ô∏è‚É£": 0, "‚ò¢Ô∏è": 0, "3Ô∏è‚É£": 0, "üóÇ": 0, "#Ô∏è‚É£": 0, "üî•": 0, "‚öõÔ∏è": 0, "ü¶ë": 0, "üß™": 0}
        slots = []
        slots.append(random.choice(list(emoges.keys())))

        await inter.edit_original_response(embed=discord.Embed(title=" ".join(slots), color=discord.Color.random()))
        await asyncio.sleep(2)
        slots.append(random.choice(list(emoges.keys())))
        
        await inter.edit_original_response(embed=discord.Embed(title=" ".join(slots), color=discord.Color.random()))
        await asyncio.sleep(2)
        slots.append(random.choice(list(emoges.keys())))

        for x in emoges:
            for y in slots:
                if y == x:
                    emoges[x] += 1

        for x in emoges:
            if emoges[x] == 3:
                win = round(stavka * 3.5)
                break
            elif emoges[x] == 2:
                win = round(stavka * 2)
                break
            elif emoges[x] == 1:
                win = False

        if win != False:
            await me.increase_balance(win)
            await inter.edit_original_response(embed=discord.Embed(title=f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! " + " ".join(slots), description=f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {stavka} –±–µ–±—Ä\n–í—ã–∏–≥—Ä—ã—à: {win} –±–µ–±—Ä", color=discord.Color.random()))
        else:
            await inter.edit_original_response(embed=discord.Embed(title=f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! " + " ".join(slots), description=f"–í—ã –º–æ–≥–ª–∏ –±—ã –≤—ã–∏–≥—Ä–∞—Ç—å {round(stavka * 3)} –±–µ–±—Ä!", color=discord.Color.random()))
            
        await update_quest(inter.user, "casino", )